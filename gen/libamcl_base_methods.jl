# Automatically generated with generator.jl
Base.pointer(a::BIG_1024_58) = reinterpret(Ptr{BIG_1024_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_1024_58}}, a::BIG_1024_58) = pointer(a)
Base.:(==)(a::BIG_1024_58, b::BIG_1024_58) = iszero(BIG_1024_58_comp(a, b))
Base.isless(a::BIG_1024_58, b::BIG_1024_58) = isone(-BIG_1024_58_comp(a, b))
Base.pointer(a::BIG_256_56) = reinterpret(Ptr{BIG_256_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_256_56}}, a::BIG_256_56) = pointer(a)
Base.:(==)(a::BIG_256_56, b::BIG_256_56) = iszero(BIG_256_56_comp(a, b))
Base.isless(a::BIG_256_56, b::BIG_256_56) = isone(-BIG_256_56_comp(a, b))
Base.pointer(a::BIG_336_60) = reinterpret(Ptr{BIG_336_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_336_60}}, a::BIG_336_60) = pointer(a)
Base.:(==)(a::BIG_336_60, b::BIG_336_60) = iszero(BIG_336_60_comp(a, b))
Base.isless(a::BIG_336_60, b::BIG_336_60) = isone(-BIG_336_60_comp(a, b))
Base.pointer(a::BIG_384_56) = reinterpret(Ptr{BIG_384_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_384_56}}, a::BIG_384_56) = pointer(a)
Base.:(==)(a::BIG_384_56, b::BIG_384_56) = iszero(BIG_384_56_comp(a, b))
Base.isless(a::BIG_384_56, b::BIG_384_56) = isone(-BIG_384_56_comp(a, b))
Base.pointer(a::BIG_384_58) = reinterpret(Ptr{BIG_384_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_384_58}}, a::BIG_384_58) = pointer(a)
Base.:(==)(a::BIG_384_58, b::BIG_384_58) = iszero(BIG_384_58_comp(a, b))
Base.isless(a::BIG_384_58, b::BIG_384_58) = isone(-BIG_384_58_comp(a, b))
Base.pointer(a::BIG_416_60) = reinterpret(Ptr{BIG_416_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_416_60}}, a::BIG_416_60) = pointer(a)
Base.:(==)(a::BIG_416_60, b::BIG_416_60) = iszero(BIG_416_60_comp(a, b))
Base.isless(a::BIG_416_60, b::BIG_416_60) = isone(-BIG_416_60_comp(a, b))
Base.pointer(a::BIG_448_58) = reinterpret(Ptr{BIG_448_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_448_58}}, a::BIG_448_58) = pointer(a)
Base.:(==)(a::BIG_448_58, b::BIG_448_58) = iszero(BIG_448_58_comp(a, b))
Base.isless(a::BIG_448_58, b::BIG_448_58) = isone(-BIG_448_58_comp(a, b))
Base.pointer(a::BIG_464_60) = reinterpret(Ptr{BIG_464_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_464_60}}, a::BIG_464_60) = pointer(a)
Base.:(==)(a::BIG_464_60, b::BIG_464_60) = iszero(BIG_464_60_comp(a, b))
Base.isless(a::BIG_464_60, b::BIG_464_60) = isone(-BIG_464_60_comp(a, b))
Base.pointer(a::BIG_480_56) = reinterpret(Ptr{BIG_480_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_480_56}}, a::BIG_480_56) = pointer(a)
Base.:(==)(a::BIG_480_56, b::BIG_480_56) = iszero(BIG_480_56_comp(a, b))
Base.isless(a::BIG_480_56, b::BIG_480_56) = isone(-BIG_480_56_comp(a, b))
Base.pointer(a::BIG_512_56) = reinterpret(Ptr{BIG_512_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_512_56}}, a::BIG_512_56) = pointer(a)
Base.:(==)(a::BIG_512_56, b::BIG_512_56) = iszero(BIG_512_56_comp(a, b))
Base.isless(a::BIG_512_56, b::BIG_512_56) = isone(-BIG_512_56_comp(a, b))
Base.pointer(a::BIG_512_60) = reinterpret(Ptr{BIG_512_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_512_60}}, a::BIG_512_60) = pointer(a)
Base.:(==)(a::BIG_512_60, b::BIG_512_60) = iszero(BIG_512_60_comp(a, b))
Base.isless(a::BIG_512_60, b::BIG_512_60) = isone(-BIG_512_60_comp(a, b))
Base.pointer(a::BIG_528_60) = reinterpret(Ptr{BIG_528_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_528_60}}, a::BIG_528_60) = pointer(a)
Base.:(==)(a::BIG_528_60, b::BIG_528_60) = iszero(BIG_528_60_comp(a, b))
Base.isless(a::BIG_528_60, b::BIG_528_60) = isone(-BIG_528_60_comp(a, b))
Base.pointer(a::BIG_560_58) = reinterpret(Ptr{BIG_560_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{BIG_560_58}}, a::BIG_560_58) = pointer(a)
Base.:(==)(a::BIG_560_58, b::BIG_560_58) = iszero(BIG_560_58_comp(a, b))
Base.isless(a::BIG_560_58, b::BIG_560_58) = isone(-BIG_560_58_comp(a, b))
Base.pointer(a::DBIG_1024_58) = reinterpret(Ptr{DBIG_1024_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_1024_58}}, a::DBIG_1024_58) = pointer(a)
Base.:(==)(a::DBIG_1024_58, b::DBIG_1024_58) = iszero(BIG_1024_58_dcomp(a, b))
Base.isless(a::DBIG_1024_58, b::DBIG_1024_58) = isone(-BIG_1024_58_dcomp(a, b))
Base.pointer(a::DBIG_256_56) = reinterpret(Ptr{DBIG_256_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_256_56}}, a::DBIG_256_56) = pointer(a)
Base.:(==)(a::DBIG_256_56, b::DBIG_256_56) = iszero(BIG_256_56_dcomp(a, b))
Base.isless(a::DBIG_256_56, b::DBIG_256_56) = isone(-BIG_256_56_dcomp(a, b))
Base.pointer(a::DBIG_336_60) = reinterpret(Ptr{DBIG_336_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_336_60}}, a::DBIG_336_60) = pointer(a)
Base.:(==)(a::DBIG_336_60, b::DBIG_336_60) = iszero(BIG_336_60_dcomp(a, b))
Base.isless(a::DBIG_336_60, b::DBIG_336_60) = isone(-BIG_336_60_dcomp(a, b))
Base.pointer(a::DBIG_384_56) = reinterpret(Ptr{DBIG_384_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_384_56}}, a::DBIG_384_56) = pointer(a)
Base.:(==)(a::DBIG_384_56, b::DBIG_384_56) = iszero(BIG_384_56_dcomp(a, b))
Base.isless(a::DBIG_384_56, b::DBIG_384_56) = isone(-BIG_384_56_dcomp(a, b))
Base.pointer(a::DBIG_384_58) = reinterpret(Ptr{DBIG_384_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_384_58}}, a::DBIG_384_58) = pointer(a)
Base.:(==)(a::DBIG_384_58, b::DBIG_384_58) = iszero(BIG_384_58_dcomp(a, b))
Base.isless(a::DBIG_384_58, b::DBIG_384_58) = isone(-BIG_384_58_dcomp(a, b))
Base.pointer(a::DBIG_416_60) = reinterpret(Ptr{DBIG_416_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_416_60}}, a::DBIG_416_60) = pointer(a)
Base.:(==)(a::DBIG_416_60, b::DBIG_416_60) = iszero(BIG_416_60_dcomp(a, b))
Base.isless(a::DBIG_416_60, b::DBIG_416_60) = isone(-BIG_416_60_dcomp(a, b))
Base.pointer(a::DBIG_448_58) = reinterpret(Ptr{DBIG_448_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_448_58}}, a::DBIG_448_58) = pointer(a)
Base.:(==)(a::DBIG_448_58, b::DBIG_448_58) = iszero(BIG_448_58_dcomp(a, b))
Base.isless(a::DBIG_448_58, b::DBIG_448_58) = isone(-BIG_448_58_dcomp(a, b))
Base.pointer(a::DBIG_464_60) = reinterpret(Ptr{DBIG_464_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_464_60}}, a::DBIG_464_60) = pointer(a)
Base.:(==)(a::DBIG_464_60, b::DBIG_464_60) = iszero(BIG_464_60_dcomp(a, b))
Base.isless(a::DBIG_464_60, b::DBIG_464_60) = isone(-BIG_464_60_dcomp(a, b))
Base.pointer(a::DBIG_480_56) = reinterpret(Ptr{DBIG_480_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_480_56}}, a::DBIG_480_56) = pointer(a)
Base.:(==)(a::DBIG_480_56, b::DBIG_480_56) = iszero(BIG_480_56_dcomp(a, b))
Base.isless(a::DBIG_480_56, b::DBIG_480_56) = isone(-BIG_480_56_dcomp(a, b))
Base.pointer(a::DBIG_512_56) = reinterpret(Ptr{DBIG_512_56}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_512_56}}, a::DBIG_512_56) = pointer(a)
Base.:(==)(a::DBIG_512_56, b::DBIG_512_56) = iszero(BIG_512_56_dcomp(a, b))
Base.isless(a::DBIG_512_56, b::DBIG_512_56) = isone(-BIG_512_56_dcomp(a, b))
Base.pointer(a::DBIG_512_60) = reinterpret(Ptr{DBIG_512_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_512_60}}, a::DBIG_512_60) = pointer(a)
Base.:(==)(a::DBIG_512_60, b::DBIG_512_60) = iszero(BIG_512_60_dcomp(a, b))
Base.isless(a::DBIG_512_60, b::DBIG_512_60) = isone(-BIG_512_60_dcomp(a, b))
Base.pointer(a::DBIG_528_60) = reinterpret(Ptr{DBIG_528_60}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_528_60}}, a::DBIG_528_60) = pointer(a)
Base.:(==)(a::DBIG_528_60, b::DBIG_528_60) = iszero(BIG_528_60_dcomp(a, b))
Base.isless(a::DBIG_528_60, b::DBIG_528_60) = isone(-BIG_528_60_dcomp(a, b))
Base.pointer(a::DBIG_560_58) = reinterpret(Ptr{DBIG_560_58}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{DBIG_560_58}}, a::DBIG_560_58) = pointer(a)
Base.:(==)(a::DBIG_560_58, b::DBIG_560_58) = iszero(BIG_560_58_dcomp(a, b))
Base.isless(a::DBIG_560_58, b::DBIG_560_58) = isone(-BIG_560_58_dcomp(a, b))
Base.pointer(a::ECP2_BLS381) = reinterpret(Ptr{ECP2_BLS381}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_BLS381}}, a::ECP2_BLS381) = pointer(a)
Base.:(==)(a::ECP2_BLS381, b::ECP2_BLS381) = isone(ECP2_BLS381_equals(a, b))
Base.pointer(a::ECP2_BLS383) = reinterpret(Ptr{ECP2_BLS383}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_BLS383}}, a::ECP2_BLS383) = pointer(a)
Base.:(==)(a::ECP2_BLS383, b::ECP2_BLS383) = isone(ECP2_BLS383_equals(a, b))
Base.pointer(a::ECP2_BLS461) = reinterpret(Ptr{ECP2_BLS461}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_BLS461}}, a::ECP2_BLS461) = pointer(a)
Base.:(==)(a::ECP2_BLS461, b::ECP2_BLS461) = isone(ECP2_BLS461_equals(a, b))
Base.pointer(a::ECP2_BN254) = reinterpret(Ptr{ECP2_BN254}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_BN254}}, a::ECP2_BN254) = pointer(a)
Base.:(==)(a::ECP2_BN254, b::ECP2_BN254) = isone(ECP2_BN254_equals(a, b))
Base.pointer(a::ECP2_BN254CX) = reinterpret(Ptr{ECP2_BN254CX}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_BN254CX}}, a::ECP2_BN254CX) = pointer(a)
Base.:(==)(a::ECP2_BN254CX, b::ECP2_BN254CX) = isone(ECP2_BN254CX_equals(a, b))
Base.pointer(a::ECP2_FP256BN) = reinterpret(Ptr{ECP2_FP256BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_FP256BN}}, a::ECP2_FP256BN) = pointer(a)
Base.:(==)(a::ECP2_FP256BN, b::ECP2_FP256BN) = isone(ECP2_FP256BN_equals(a, b))
Base.pointer(a::ECP2_FP512BN) = reinterpret(Ptr{ECP2_FP512BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP2_FP512BN}}, a::ECP2_FP512BN) = pointer(a)
Base.:(==)(a::ECP2_FP512BN, b::ECP2_FP512BN) = isone(ECP2_FP512BN_equals(a, b))
Base.pointer(a::ECP4_BLS24) = reinterpret(Ptr{ECP4_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP4_BLS24}}, a::ECP4_BLS24) = pointer(a)
Base.:(==)(a::ECP4_BLS24, b::ECP4_BLS24) = isone(ECP4_BLS24_equals(a, b))
Base.pointer(a::ECP8_BLS48) = reinterpret(Ptr{ECP8_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP8_BLS48}}, a::ECP8_BLS48) = pointer(a)
Base.:(==)(a::ECP8_BLS48, b::ECP8_BLS48) = isone(ECP8_BLS48_equals(a, b))
Base.pointer(a::ECP_ANSSI) = reinterpret(Ptr{ECP_ANSSI}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_ANSSI}}, a::ECP_ANSSI) = pointer(a)
Base.:(==)(a::ECP_ANSSI, b::ECP_ANSSI) = isone(ECP_ANSSI_equals(a, b))
Base.pointer(a::ECP_BLS24) = reinterpret(Ptr{ECP_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BLS24}}, a::ECP_BLS24) = pointer(a)
Base.:(==)(a::ECP_BLS24, b::ECP_BLS24) = isone(ECP_BLS24_equals(a, b))
Base.pointer(a::ECP_BLS381) = reinterpret(Ptr{ECP_BLS381}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BLS381}}, a::ECP_BLS381) = pointer(a)
Base.:(==)(a::ECP_BLS381, b::ECP_BLS381) = isone(ECP_BLS381_equals(a, b))
Base.pointer(a::ECP_BLS383) = reinterpret(Ptr{ECP_BLS383}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BLS383}}, a::ECP_BLS383) = pointer(a)
Base.:(==)(a::ECP_BLS383, b::ECP_BLS383) = isone(ECP_BLS383_equals(a, b))
Base.pointer(a::ECP_BLS461) = reinterpret(Ptr{ECP_BLS461}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BLS461}}, a::ECP_BLS461) = pointer(a)
Base.:(==)(a::ECP_BLS461, b::ECP_BLS461) = isone(ECP_BLS461_equals(a, b))
Base.pointer(a::ECP_BLS48) = reinterpret(Ptr{ECP_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BLS48}}, a::ECP_BLS48) = pointer(a)
Base.:(==)(a::ECP_BLS48, b::ECP_BLS48) = isone(ECP_BLS48_equals(a, b))
Base.pointer(a::ECP_BN254) = reinterpret(Ptr{ECP_BN254}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BN254}}, a::ECP_BN254) = pointer(a)
Base.:(==)(a::ECP_BN254, b::ECP_BN254) = isone(ECP_BN254_equals(a, b))
Base.pointer(a::ECP_BN254CX) = reinterpret(Ptr{ECP_BN254CX}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BN254CX}}, a::ECP_BN254CX) = pointer(a)
Base.:(==)(a::ECP_BN254CX, b::ECP_BN254CX) = isone(ECP_BN254CX_equals(a, b))
Base.pointer(a::ECP_BRAINPOOL) = reinterpret(Ptr{ECP_BRAINPOOL}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_BRAINPOOL}}, a::ECP_BRAINPOOL) = pointer(a)
Base.:(==)(a::ECP_BRAINPOOL, b::ECP_BRAINPOOL) = isone(ECP_BRAINPOOL_equals(a, b))
Base.pointer(a::ECP_C25519) = reinterpret(Ptr{ECP_C25519}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_C25519}}, a::ECP_C25519) = pointer(a)
Base.:(==)(a::ECP_C25519, b::ECP_C25519) = isone(ECP_C25519_equals(a, b))
Base.pointer(a::ECP_C41417) = reinterpret(Ptr{ECP_C41417}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_C41417}}, a::ECP_C41417) = pointer(a)
Base.:(==)(a::ECP_C41417, b::ECP_C41417) = isone(ECP_C41417_equals(a, b))
Base.pointer(a::ECP_ED25519) = reinterpret(Ptr{ECP_ED25519}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_ED25519}}, a::ECP_ED25519) = pointer(a)
Base.:(==)(a::ECP_ED25519, b::ECP_ED25519) = isone(ECP_ED25519_equals(a, b))
Base.pointer(a::ECP_FP256BN) = reinterpret(Ptr{ECP_FP256BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_FP256BN}}, a::ECP_FP256BN) = pointer(a)
Base.:(==)(a::ECP_FP256BN, b::ECP_FP256BN) = isone(ECP_FP256BN_equals(a, b))
Base.pointer(a::ECP_FP512BN) = reinterpret(Ptr{ECP_FP512BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_FP512BN}}, a::ECP_FP512BN) = pointer(a)
Base.:(==)(a::ECP_FP512BN, b::ECP_FP512BN) = isone(ECP_FP512BN_equals(a, b))
Base.pointer(a::ECP_GOLDILOCKS) = reinterpret(Ptr{ECP_GOLDILOCKS}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_GOLDILOCKS}}, a::ECP_GOLDILOCKS) = pointer(a)
Base.:(==)(a::ECP_GOLDILOCKS, b::ECP_GOLDILOCKS) = isone(ECP_GOLDILOCKS_equals(a, b))
Base.pointer(a::ECP_HIFIVE) = reinterpret(Ptr{ECP_HIFIVE}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_HIFIVE}}, a::ECP_HIFIVE) = pointer(a)
Base.:(==)(a::ECP_HIFIVE, b::ECP_HIFIVE) = isone(ECP_HIFIVE_equals(a, b))
Base.pointer(a::ECP_NIST256) = reinterpret(Ptr{ECP_NIST256}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NIST256}}, a::ECP_NIST256) = pointer(a)
Base.:(==)(a::ECP_NIST256, b::ECP_NIST256) = isone(ECP_NIST256_equals(a, b))
Base.pointer(a::ECP_NIST384) = reinterpret(Ptr{ECP_NIST384}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NIST384}}, a::ECP_NIST384) = pointer(a)
Base.:(==)(a::ECP_NIST384, b::ECP_NIST384) = isone(ECP_NIST384_equals(a, b))
Base.pointer(a::ECP_NIST521) = reinterpret(Ptr{ECP_NIST521}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NIST521}}, a::ECP_NIST521) = pointer(a)
Base.:(==)(a::ECP_NIST521, b::ECP_NIST521) = isone(ECP_NIST521_equals(a, b))
Base.pointer(a::ECP_NUMS256E) = reinterpret(Ptr{ECP_NUMS256E}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NUMS256E}}, a::ECP_NUMS256E) = pointer(a)
Base.:(==)(a::ECP_NUMS256E, b::ECP_NUMS256E) = isone(ECP_NUMS256E_equals(a, b))
Base.pointer(a::ECP_NUMS256W) = reinterpret(Ptr{ECP_NUMS256W}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NUMS256W}}, a::ECP_NUMS256W) = pointer(a)
Base.:(==)(a::ECP_NUMS256W, b::ECP_NUMS256W) = isone(ECP_NUMS256W_equals(a, b))
Base.pointer(a::ECP_NUMS384E) = reinterpret(Ptr{ECP_NUMS384E}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NUMS384E}}, a::ECP_NUMS384E) = pointer(a)
Base.:(==)(a::ECP_NUMS384E, b::ECP_NUMS384E) = isone(ECP_NUMS384E_equals(a, b))
Base.pointer(a::ECP_NUMS384W) = reinterpret(Ptr{ECP_NUMS384W}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NUMS384W}}, a::ECP_NUMS384W) = pointer(a)
Base.:(==)(a::ECP_NUMS384W, b::ECP_NUMS384W) = isone(ECP_NUMS384W_equals(a, b))
Base.pointer(a::ECP_NUMS512E) = reinterpret(Ptr{ECP_NUMS512E}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NUMS512E}}, a::ECP_NUMS512E) = pointer(a)
Base.:(==)(a::ECP_NUMS512E, b::ECP_NUMS512E) = isone(ECP_NUMS512E_equals(a, b))
Base.pointer(a::ECP_NUMS512W) = reinterpret(Ptr{ECP_NUMS512W}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_NUMS512W}}, a::ECP_NUMS512W) = pointer(a)
Base.:(==)(a::ECP_NUMS512W, b::ECP_NUMS512W) = isone(ECP_NUMS512W_equals(a, b))
Base.pointer(a::ECP_SECP256K1) = reinterpret(Ptr{ECP_SECP256K1}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{ECP_SECP256K1}}, a::ECP_SECP256K1) = pointer(a)
Base.:(==)(a::ECP_SECP256K1, b::ECP_SECP256K1) = isone(ECP_SECP256K1_equals(a, b))
Base.pointer(a::FP12_BLS381) = reinterpret(Ptr{FP12_BLS381}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_BLS381}}, a::FP12_BLS381) = pointer(a)
Base.:(==)(a::FP12_BLS381, b::FP12_BLS381) = isone(FP12_BLS381_equals(a, b))
Base.pointer(a::FP12_BLS383) = reinterpret(Ptr{FP12_BLS383}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_BLS383}}, a::FP12_BLS383) = pointer(a)
Base.:(==)(a::FP12_BLS383, b::FP12_BLS383) = isone(FP12_BLS383_equals(a, b))
Base.pointer(a::FP12_BLS461) = reinterpret(Ptr{FP12_BLS461}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_BLS461}}, a::FP12_BLS461) = pointer(a)
Base.:(==)(a::FP12_BLS461, b::FP12_BLS461) = isone(FP12_BLS461_equals(a, b))
Base.pointer(a::FP12_BN254) = reinterpret(Ptr{FP12_BN254}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_BN254}}, a::FP12_BN254) = pointer(a)
Base.:(==)(a::FP12_BN254, b::FP12_BN254) = isone(FP12_BN254_equals(a, b))
Base.pointer(a::FP12_BN254CX) = reinterpret(Ptr{FP12_BN254CX}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_BN254CX}}, a::FP12_BN254CX) = pointer(a)
Base.:(==)(a::FP12_BN254CX, b::FP12_BN254CX) = isone(FP12_BN254CX_equals(a, b))
Base.pointer(a::FP12_FP256BN) = reinterpret(Ptr{FP12_FP256BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_FP256BN}}, a::FP12_FP256BN) = pointer(a)
Base.:(==)(a::FP12_FP256BN, b::FP12_FP256BN) = isone(FP12_FP256BN_equals(a, b))
Base.pointer(a::FP12_FP512BN) = reinterpret(Ptr{FP12_FP512BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP12_FP512BN}}, a::FP12_FP512BN) = pointer(a)
Base.:(==)(a::FP12_FP512BN, b::FP12_FP512BN) = isone(FP12_FP512BN_equals(a, b))
Base.pointer(a::FP16_BLS48) = reinterpret(Ptr{FP16_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP16_BLS48}}, a::FP16_BLS48) = pointer(a)
Base.:(==)(a::FP16_BLS48, b::FP16_BLS48) = isone(FP16_BLS48_equals(a, b))
Base.pointer(a::FP24_BLS24) = reinterpret(Ptr{FP24_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP24_BLS24}}, a::FP24_BLS24) = pointer(a)
Base.:(==)(a::FP24_BLS24, b::FP24_BLS24) = isone(FP24_BLS24_equals(a, b))
Base.pointer(a::FP2_BLS24) = reinterpret(Ptr{FP2_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BLS24}}, a::FP2_BLS24) = pointer(a)
Base.:(==)(a::FP2_BLS24, b::FP2_BLS24) = isone(FP2_BLS24_equals(a, b))
Base.pointer(a::FP2_BLS381) = reinterpret(Ptr{FP2_BLS381}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BLS381}}, a::FP2_BLS381) = pointer(a)
Base.:(==)(a::FP2_BLS381, b::FP2_BLS381) = isone(FP2_BLS381_equals(a, b))
Base.pointer(a::FP2_BLS383) = reinterpret(Ptr{FP2_BLS383}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BLS383}}, a::FP2_BLS383) = pointer(a)
Base.:(==)(a::FP2_BLS383, b::FP2_BLS383) = isone(FP2_BLS383_equals(a, b))
Base.pointer(a::FP2_BLS461) = reinterpret(Ptr{FP2_BLS461}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BLS461}}, a::FP2_BLS461) = pointer(a)
Base.:(==)(a::FP2_BLS461, b::FP2_BLS461) = isone(FP2_BLS461_equals(a, b))
Base.pointer(a::FP2_BLS48) = reinterpret(Ptr{FP2_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BLS48}}, a::FP2_BLS48) = pointer(a)
Base.:(==)(a::FP2_BLS48, b::FP2_BLS48) = isone(FP2_BLS48_equals(a, b))
Base.pointer(a::FP2_BN254) = reinterpret(Ptr{FP2_BN254}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BN254}}, a::FP2_BN254) = pointer(a)
Base.:(==)(a::FP2_BN254, b::FP2_BN254) = isone(FP2_BN254_equals(a, b))
Base.pointer(a::FP2_BN254CX) = reinterpret(Ptr{FP2_BN254CX}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_BN254CX}}, a::FP2_BN254CX) = pointer(a)
Base.:(==)(a::FP2_BN254CX, b::FP2_BN254CX) = isone(FP2_BN254CX_equals(a, b))
Base.pointer(a::FP2_FP256BN) = reinterpret(Ptr{FP2_FP256BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_FP256BN}}, a::FP2_FP256BN) = pointer(a)
Base.:(==)(a::FP2_FP256BN, b::FP2_FP256BN) = isone(FP2_FP256BN_equals(a, b))
Base.pointer(a::FP2_FP512BN) = reinterpret(Ptr{FP2_FP512BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP2_FP512BN}}, a::FP2_FP512BN) = pointer(a)
Base.:(==)(a::FP2_FP512BN, b::FP2_FP512BN) = isone(FP2_FP512BN_equals(a, b))
Base.pointer(a::FP48_BLS48) = reinterpret(Ptr{FP48_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP48_BLS48}}, a::FP48_BLS48) = pointer(a)
Base.:(==)(a::FP48_BLS48, b::FP48_BLS48) = isone(FP48_BLS48_equals(a, b))
Base.pointer(a::FP4_BLS24) = reinterpret(Ptr{FP4_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BLS24}}, a::FP4_BLS24) = pointer(a)
Base.:(==)(a::FP4_BLS24, b::FP4_BLS24) = isone(FP4_BLS24_equals(a, b))
Base.pointer(a::FP4_BLS381) = reinterpret(Ptr{FP4_BLS381}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BLS381}}, a::FP4_BLS381) = pointer(a)
Base.:(==)(a::FP4_BLS381, b::FP4_BLS381) = isone(FP4_BLS381_equals(a, b))
Base.pointer(a::FP4_BLS383) = reinterpret(Ptr{FP4_BLS383}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BLS383}}, a::FP4_BLS383) = pointer(a)
Base.:(==)(a::FP4_BLS383, b::FP4_BLS383) = isone(FP4_BLS383_equals(a, b))
Base.pointer(a::FP4_BLS461) = reinterpret(Ptr{FP4_BLS461}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BLS461}}, a::FP4_BLS461) = pointer(a)
Base.:(==)(a::FP4_BLS461, b::FP4_BLS461) = isone(FP4_BLS461_equals(a, b))
Base.pointer(a::FP4_BLS48) = reinterpret(Ptr{FP4_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BLS48}}, a::FP4_BLS48) = pointer(a)
Base.:(==)(a::FP4_BLS48, b::FP4_BLS48) = isone(FP4_BLS48_equals(a, b))
Base.pointer(a::FP4_BN254) = reinterpret(Ptr{FP4_BN254}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BN254}}, a::FP4_BN254) = pointer(a)
Base.:(==)(a::FP4_BN254, b::FP4_BN254) = isone(FP4_BN254_equals(a, b))
Base.pointer(a::FP4_BN254CX) = reinterpret(Ptr{FP4_BN254CX}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_BN254CX}}, a::FP4_BN254CX) = pointer(a)
Base.:(==)(a::FP4_BN254CX, b::FP4_BN254CX) = isone(FP4_BN254CX_equals(a, b))
Base.pointer(a::FP4_FP256BN) = reinterpret(Ptr{FP4_FP256BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_FP256BN}}, a::FP4_FP256BN) = pointer(a)
Base.:(==)(a::FP4_FP256BN, b::FP4_FP256BN) = isone(FP4_FP256BN_equals(a, b))
Base.pointer(a::FP4_FP512BN) = reinterpret(Ptr{FP4_FP512BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP4_FP512BN}}, a::FP4_FP512BN) = pointer(a)
Base.:(==)(a::FP4_FP512BN, b::FP4_FP512BN) = isone(FP4_FP512BN_equals(a, b))
Base.pointer(a::FP8_BLS24) = reinterpret(Ptr{FP8_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP8_BLS24}}, a::FP8_BLS24) = pointer(a)
Base.:(==)(a::FP8_BLS24, b::FP8_BLS24) = isone(FP8_BLS24_equals(a, b))
Base.pointer(a::FP8_BLS48) = reinterpret(Ptr{FP8_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP8_BLS48}}, a::FP8_BLS48) = pointer(a)
Base.:(==)(a::FP8_BLS48, b::FP8_BLS48) = isone(FP8_BLS48_equals(a, b))
Base.pointer(a::FP_25519) = reinterpret(Ptr{FP_25519}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_25519}}, a::FP_25519) = pointer(a)
Base.:(==)(a::FP_25519, b::FP_25519) = isone(FP_25519_equals(a, b))
Base.pointer(a::FP_256PME) = reinterpret(Ptr{FP_256PME}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_256PME}}, a::FP_256PME) = pointer(a)
Base.:(==)(a::FP_256PME, b::FP_256PME) = isone(FP_256PME_equals(a, b))
Base.pointer(a::FP_256PMW) = reinterpret(Ptr{FP_256PMW}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_256PMW}}, a::FP_256PMW) = pointer(a)
Base.:(==)(a::FP_256PMW, b::FP_256PMW) = isone(FP_256PMW_equals(a, b))
Base.pointer(a::FP_384PM) = reinterpret(Ptr{FP_384PM}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_384PM}}, a::FP_384PM) = pointer(a)
Base.:(==)(a::FP_384PM, b::FP_384PM) = isone(FP_384PM_equals(a, b))
Base.pointer(a::FP_512PM) = reinterpret(Ptr{FP_512PM}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_512PM}}, a::FP_512PM) = pointer(a)
Base.:(==)(a::FP_512PM, b::FP_512PM) = isone(FP_512PM_equals(a, b))
Base.pointer(a::FP_ANSSI) = reinterpret(Ptr{FP_ANSSI}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_ANSSI}}, a::FP_ANSSI) = pointer(a)
Base.:(==)(a::FP_ANSSI, b::FP_ANSSI) = isone(FP_ANSSI_equals(a, b))
Base.pointer(a::FP_BLS24) = reinterpret(Ptr{FP_BLS24}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BLS24}}, a::FP_BLS24) = pointer(a)
Base.:(==)(a::FP_BLS24, b::FP_BLS24) = isone(FP_BLS24_equals(a, b))
Base.pointer(a::FP_BLS381) = reinterpret(Ptr{FP_BLS381}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BLS381}}, a::FP_BLS381) = pointer(a)
Base.:(==)(a::FP_BLS381, b::FP_BLS381) = isone(FP_BLS381_equals(a, b))
Base.pointer(a::FP_BLS383) = reinterpret(Ptr{FP_BLS383}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BLS383}}, a::FP_BLS383) = pointer(a)
Base.:(==)(a::FP_BLS383, b::FP_BLS383) = isone(FP_BLS383_equals(a, b))
Base.pointer(a::FP_BLS461) = reinterpret(Ptr{FP_BLS461}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BLS461}}, a::FP_BLS461) = pointer(a)
Base.:(==)(a::FP_BLS461, b::FP_BLS461) = isone(FP_BLS461_equals(a, b))
Base.pointer(a::FP_BLS48) = reinterpret(Ptr{FP_BLS48}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BLS48}}, a::FP_BLS48) = pointer(a)
Base.:(==)(a::FP_BLS48, b::FP_BLS48) = isone(FP_BLS48_equals(a, b))
Base.pointer(a::FP_BN254) = reinterpret(Ptr{FP_BN254}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BN254}}, a::FP_BN254) = pointer(a)
Base.:(==)(a::FP_BN254, b::FP_BN254) = isone(FP_BN254_equals(a, b))
Base.pointer(a::FP_BN254CX) = reinterpret(Ptr{FP_BN254CX}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BN254CX}}, a::FP_BN254CX) = pointer(a)
Base.:(==)(a::FP_BN254CX, b::FP_BN254CX) = isone(FP_BN254CX_equals(a, b))
Base.pointer(a::FP_BRAINPOOL) = reinterpret(Ptr{FP_BRAINPOOL}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_BRAINPOOL}}, a::FP_BRAINPOOL) = pointer(a)
Base.:(==)(a::FP_BRAINPOOL, b::FP_BRAINPOOL) = isone(FP_BRAINPOOL_equals(a, b))
Base.pointer(a::FP_C41417) = reinterpret(Ptr{FP_C41417}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_C41417}}, a::FP_C41417) = pointer(a)
Base.:(==)(a::FP_C41417, b::FP_C41417) = isone(FP_C41417_equals(a, b))
Base.pointer(a::FP_FP256BN) = reinterpret(Ptr{FP_FP256BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_FP256BN}}, a::FP_FP256BN) = pointer(a)
Base.:(==)(a::FP_FP256BN, b::FP_FP256BN) = isone(FP_FP256BN_equals(a, b))
Base.pointer(a::FP_FP512BN) = reinterpret(Ptr{FP_FP512BN}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_FP512BN}}, a::FP_FP512BN) = pointer(a)
Base.:(==)(a::FP_FP512BN, b::FP_FP512BN) = isone(FP_FP512BN_equals(a, b))
Base.pointer(a::FP_GOLDILOCKS) = reinterpret(Ptr{FP_GOLDILOCKS}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_GOLDILOCKS}}, a::FP_GOLDILOCKS) = pointer(a)
Base.:(==)(a::FP_GOLDILOCKS, b::FP_GOLDILOCKS) = isone(FP_GOLDILOCKS_equals(a, b))
Base.pointer(a::FP_HIFIVE) = reinterpret(Ptr{FP_HIFIVE}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_HIFIVE}}, a::FP_HIFIVE) = pointer(a)
Base.:(==)(a::FP_HIFIVE, b::FP_HIFIVE) = isone(FP_HIFIVE_equals(a, b))
Base.pointer(a::FP_NIST256) = reinterpret(Ptr{FP_NIST256}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_NIST256}}, a::FP_NIST256) = pointer(a)
Base.:(==)(a::FP_NIST256, b::FP_NIST256) = isone(FP_NIST256_equals(a, b))
Base.pointer(a::FP_NIST384) = reinterpret(Ptr{FP_NIST384}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_NIST384}}, a::FP_NIST384) = pointer(a)
Base.:(==)(a::FP_NIST384, b::FP_NIST384) = isone(FP_NIST384_equals(a, b))
Base.pointer(a::FP_NIST521) = reinterpret(Ptr{FP_NIST521}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_NIST521}}, a::FP_NIST521) = pointer(a)
Base.:(==)(a::FP_NIST521, b::FP_NIST521) = isone(FP_NIST521_equals(a, b))
Base.pointer(a::FP_SECP256K1) = reinterpret(Ptr{FP_SECP256K1}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{FP_SECP256K1}}, a::FP_SECP256K1) = pointer(a)
Base.:(==)(a::FP_SECP256K1, b::FP_SECP256K1) = isone(FP_SECP256K1_equals(a, b))
Base.pointer(a::amcl_aes) = reinterpret(Ptr{amcl_aes}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{amcl_aes}}, a::amcl_aes) = pointer(a)
Base.pointer(a::csprng) = reinterpret(Ptr{csprng}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{csprng}}, a::csprng) = pointer(a)
Base.pointer(a::gcm) = reinterpret(Ptr{gcm}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{gcm}}, a::gcm) = pointer(a)
Base.pointer(a::hash256) = reinterpret(Ptr{hash256}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{hash256}}, a::hash256) = pointer(a)
Base.pointer(a::hash512) = reinterpret(Ptr{hash512}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{hash512}}, a::hash512) = pointer(a)
Base.pointer(a::octet) = reinterpret(Ptr{octet}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{octet}}, a::octet) = pointer(a)
Base.:(==)(a::octet, b::octet) = isone(AMCL.OCT_comp(a, b))
Base.pointer(a::pktype) = reinterpret(Ptr{pktype}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{pktype}}, a::pktype) = pointer(a)
Base.pointer(a::rsa_private_key_2048) = reinterpret(Ptr{rsa_private_key_2048}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{rsa_private_key_2048}}, a::rsa_private_key_2048) = pointer(a)
Base.pointer(a::rsa_private_key_3072) = reinterpret(Ptr{rsa_private_key_3072}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{rsa_private_key_3072}}, a::rsa_private_key_3072) = pointer(a)
Base.pointer(a::rsa_private_key_4096) = reinterpret(Ptr{rsa_private_key_4096}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{rsa_private_key_4096}}, a::rsa_private_key_4096) = pointer(a)
Base.pointer(a::rsa_public_key_2048) = reinterpret(Ptr{rsa_public_key_2048}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{rsa_public_key_2048}}, a::rsa_public_key_2048) = pointer(a)
Base.pointer(a::rsa_public_key_3072) = reinterpret(Ptr{rsa_public_key_3072}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{rsa_public_key_3072}}, a::rsa_public_key_3072) = pointer(a)
Base.pointer(a::rsa_public_key_4096) = reinterpret(Ptr{rsa_public_key_4096}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{rsa_public_key_4096}}, a::rsa_public_key_4096) = pointer(a)
Base.pointer(a::sha3) = reinterpret(Ptr{sha3}, pointer_from_objref(a))
Base.unsafe_convert(::Type{Ptr{sha3}}, a::sha3) = pointer(a)
